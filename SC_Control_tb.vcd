$date
	Wed Oct 29 18:35:35 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module SC_Control_tb $end
$var wire 1 ! Uncondbranch $end
$var wire 2 " SignOp [1:0] $end
$var wire 1 # RegWrite $end
$var wire 1 $ Reg2Loc $end
$var wire 1 % MemtoReg $end
$var wire 1 & MemWrite $end
$var wire 1 ' MemRead $end
$var wire 1 ( Branch $end
$var wire 1 ) ALUSrc $end
$var wire 4 * ALUOp [3:0] $end
$var reg 11 + opcode [10:0] $end
$var integer 32 , fail_count [31:0] $end
$var integer 32 - i [31:0] $end
$var integer 32 . pass_count [31:0] $end
$var integer 32 / test_count [31:0] $end
$scope module uut $end
$var wire 11 0 opcode [10:0] $end
$var reg 4 1 ALUOp [3:0] $end
$var reg 1 ) ALUSrc $end
$var reg 1 ( Branch $end
$var reg 1 ' MemRead $end
$var reg 1 & MemWrite $end
$var reg 1 % MemtoReg $end
$var reg 1 $ Reg2Loc $end
$var reg 1 # RegWrite $end
$var reg 2 2 SignOp [1:0] $end
$var reg 1 ! Uncondbranch $end
$upscope $end
$scope task check_output $end
$var reg 4 3 exp_ALUOp [3:0] $end
$var reg 1 4 exp_ALUSrc $end
$var reg 1 5 exp_Branch $end
$var reg 1 6 exp_MemRead $end
$var reg 1 7 exp_MemWrite $end
$var reg 1 8 exp_MemtoReg $end
$var reg 1 9 exp_Reg2Loc $end
$var reg 1 : exp_RegWrite $end
$var reg 2 ; exp_SignOp [1:0] $end
$var reg 1 < exp_Uncondbranch $end
$var reg 128 = inst_name [127:0] $end
$var reg 11 > test_opcode [10:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b10001010000 >
b10000010100111001000100 =
0<
b0 ;
1:
09
08
07
06
05
04
b0 3
b0 2
b0 1
b10001010000 0
b1 /
b0 .
bx -
b0 ,
b10001010000 +
b0 *
0)
0(
0'
0&
0%
0$
1#
b0 "
0!
$end
#1000
b1 *
b1 1
1#
b10 /
b1 3
b10011110101001001010010 =
b10101010000 >
b10101010000 +
b10101010000 0
b1 .
#2000
b10 *
b10 1
1#
b11 /
b10 3
b10000010100010001000100 =
b10001011000 >
b10001011000 +
b10001011000 0
b10 .
#3000
b110 *
b110 1
1#
b100 /
b110 3
b10100110101010101000010 =
b11001011000 >
b11001011000 +
b11001011000 0
b11 .
#4000
1)
b10 *
b10 1
1#
b101 /
b10 3
14
b10000010100010001000100010010010100110101001101 =
b10010001000 >
b10010001000 +
b10010001000 0
b0 -
b100 .
#5000
b10 *
b10 1
1#
1)
b110 /
b10010001001 >
b10010001001 +
b10010001001 0
b1 -
b101 .
#6000
b110 *
b110 1
1#
1)
b111 /
b110 3
b10100110101010101000010010010010100110101001101 =
b11010001000 >
b11010001000 +
b11010001000 0
b0 -
b110 .
#7000
b110 *
b110 1
1#
1)
b1000 /
b11010001001 >
b11010001001 +
b11010001001 0
b1 -
b111 .
#8000
b111 *
b111 1
1#
1)
b1001 /
b111 3
b1001101010011110101011001011010 =
b11010010100 >
b11010010100 +
b11010010100 0
b0 -
b1000 .
#9000
b111 *
b111 1
1#
1)
b1010 /
b11010010101 >
b11010010101 +
b11010010101 0
b1 -
b1001 .
#10000
b111 *
b111 1
1#
1)
b1011 /
b11010010110 >
b11010010110 +
b11010010110 0
b10 -
b1010 .
#11000
b111 *
b111 1
1#
1)
b1100 /
b11010010111 >
b11010010111 +
b11010010111 0
b11 -
b1011 .
#12000
b11 "
b11 2
1!
b0 *
b0 1
0#
0)
b1101 /
b11 ;
b0 3
1<
0:
04
b1000010 =
b10100000 >
b10100000 +
b10100000 0
b0 -
b1100 .
#13000
b11 "
b11 2
1!
b1110 /
b10100001 >
b10100001 +
b10100001 0
b1 -
b1101 .
#14000
b11 "
b11 2
1!
b1111 /
b10100010 >
b10100010 +
b10100010 0
b10 -
b1110 .
#15000
b11 "
b11 2
1!
b10000 /
b10100011 >
b10100011 +
b10100011 0
b11 -
b1111 .
#16000
b11 "
b11 2
1!
b10001 /
b10100100 >
b10100100 +
b10100100 0
b100 -
b10000 .
#17000
b11 "
b11 2
1!
b10010 /
b10100101 >
b10100101 +
b10100101 0
b101 -
b10001 .
#18000
b11 "
b11 2
1!
b10011 /
b10100110 >
b10100110 +
b10100110 0
b110 -
b10010 .
#19000
b11 "
b11 2
1!
b10100 /
b10100111 >
b10100111 +
b10100111 0
b111 -
b10011 .
#20000
b11 "
b11 2
1!
b10101 /
b10101000 >
b10101000 +
b10101000 0
b1000 -
b10100 .
#21000
b11 "
b11 2
1!
b10110 /
b10101001 >
b10101001 +
b10101001 0
b1001 -
b10101 .
#22000
b11 "
b11 2
1!
b10111 /
b10101010 >
b10101010 +
b10101010 0
b1010 -
b10110 .
#23000
b11 "
b11 2
1!
b11000 /
b10101011 >
b10101011 +
b10101011 0
b1011 -
b10111 .
#24000
b11 "
b11 2
1!
b11001 /
b10101100 >
b10101100 +
b10101100 0
b1100 -
b11000 .
#25000
b11 "
b11 2
1!
b11010 /
b10101101 >
b10101101 +
b10101101 0
b1101 -
b11001 .
#26000
b11 "
b11 2
1!
b11011 /
b10101110 >
b10101110 +
b10101110 0
b1110 -
b11010 .
#27000
b11 "
b11 2
1!
b11100 /
b10101111 >
b10101111 +
b10101111 0
b1111 -
b11011 .
#28000
b11 "
b11 2
1!
b11101 /
b10110000 >
b10110000 +
b10110000 0
b10000 -
b11100 .
#29000
b11 "
b11 2
1!
b11110 /
b10110001 >
b10110001 +
b10110001 0
b10001 -
b11101 .
#30000
b11 "
b11 2
1!
b11111 /
b10110010 >
b10110010 +
b10110010 0
b10010 -
b11110 .
#31000
b11 "
b11 2
1!
b100000 /
b10110011 >
b10110011 +
b10110011 0
b10011 -
b11111 .
#32000
b11 "
b11 2
1!
b100001 /
b10110100 >
b10110100 +
b10110100 0
b10100 -
b100000 .
#33000
b11 "
b11 2
1!
b100010 /
b10110101 >
b10110101 +
b10110101 0
b10101 -
b100001 .
#34000
b11 "
b11 2
1!
b100011 /
b10110110 >
b10110110 +
b10110110 0
b10110 -
b100010 .
#35000
b11 "
b11 2
1!
b100100 /
b10110111 >
b10110111 +
b10110111 0
b10111 -
b100011 .
#36000
b11 "
b11 2
1!
b100101 /
b10111000 >
b10111000 +
b10111000 0
b11000 -
b100100 .
#37000
b11 "
b11 2
1!
b100110 /
b10111001 >
b10111001 +
b10111001 0
b11001 -
b100101 .
#38000
b11 "
b11 2
1!
b100111 /
b10111010 >
b10111010 +
b10111010 0
b11010 -
b100110 .
#39000
b11 "
b11 2
1!
b101000 /
b10111011 >
b10111011 +
b10111011 0
b11011 -
b100111 .
#40000
b11 "
b11 2
1!
b101001 /
b10111100 >
b10111100 +
b10111100 0
b11100 -
b101000 .
#41000
b11 "
b11 2
1!
b101010 /
b10111101 >
b10111101 +
b10111101 0
b11101 -
b101001 .
#42000
b11 "
b11 2
1!
b101011 /
b10111110 >
b10111110 +
b10111110 0
b11110 -
b101010 .
#43000
b11 "
b11 2
1!
b101100 /
b10111111 >
b10111111 +
b10111111 0
b11111 -
b101011 .
#44000
b111 *
b111 1
1(
1$
b10 "
b10 2
0!
b101101 /
b10 ;
b111 3
0<
15
19
b10000110100001001011010 =
b10110100000 >
b10110100000 +
b10110100000 0
b0 -
b101100 .
#45000
b10 "
b10 2
b111 *
b111 1
1(
1$
b101110 /
b10110100001 >
b10110100001 +
b10110100001 0
b1 -
b101101 .
#46000
b10 "
b10 2
b111 *
b111 1
1(
1$
b101111 /
b10110100010 >
b10110100010 +
b10110100010 0
b10 -
b101110 .
#47000
b10 "
b10 2
b111 *
b111 1
1(
1$
b110000 /
b10110100011 >
b10110100011 +
b10110100011 0
b11 -
b101111 .
#48000
b10 "
b10 2
b111 *
b111 1
1(
1$
b110001 /
b10110100100 >
b10110100100 +
b10110100100 0
b100 -
b110000 .
#49000
b10 "
b10 2
b111 *
b111 1
1(
1$
b110010 /
b10110100101 >
b10110100101 +
b10110100101 0
b101 -
b110001 .
#50000
b10 "
b10 2
b111 *
b111 1
1(
1$
b110011 /
b10110100110 >
b10110100110 +
b10110100110 0
b110 -
b110010 .
#51000
b10 "
b10 2
b111 *
b111 1
1(
1$
b110100 /
b10110100111 >
b10110100111 +
b10110100111 0
b111 -
b110011 .
#52000
1'
1#
1%
1)
b1 "
b1 2
b10 *
b10 1
0(
0$
b110101 /
b1 ;
b10 3
05
16
1:
18
14
09
b1001100010001000101010101010010 =
b11111000010 >
b11111000010 +
b11111000010 0
b1000 -
b110100 .
#53000
1&
1$
b1 "
b1 2
b10 *
b10 1
0'
0#
0%
1)
b110110 /
17
06
0:
08
19
b1010011010101000101010101010010 =
b11111000000 >
b11111000000 +
b11111000000 0
b110101 .
#54000
b0 "
b0 2
b0 *
b0 1
0&
0)
0$
b110111 /
b0 ;
b0 3
07
04
09
b101010101001110010001000100010101000110 =
b0 >
b0 +
b0 0
b110110 .
#55000
b111000 /
b11111111111 >
b11111111111 +
b11111111111 0
b110111 .
#56000
b111001 /
b1010101010 >
b1010101010 +
b1010101010 0
b111000 .
#57000
b111010 /
b10101010101 >
b10101010101 +
b10101010101 0
b111001 .
#58000
b111011 /
b11001100110 >
b11001100110 +
b11001100110 0
b111010 .
#59000
b111100 /
b110011001 >
b110011001 +
b110011001 0
b111011 .
#60000
b111101 /
b10011001100 >
b10011001100 +
b10011001100 0
b111100 .
#61000
b111110 /
b1100110011 >
b1100110011 +
b1100110011 0
b111101 .
#62000
b111111 /
b11110000111 >
b11110000111 +
b11110000111 0
b111110 .
#63000
b1000000 /
b1111000 >
b1111000 +
b1111000 0
b111111 .
#64000
b1000000 .
